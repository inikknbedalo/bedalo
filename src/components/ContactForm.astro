---
export interface Props {
  formData: any;
}
const { formData } = Astro.props;
---

<div class="flex flex-col lg:flex-row gap-12 items-center">
    <div class="lg:w-1/3 text-center lg:text-left" data-aos="fade-right">
        <h2 class="text-3xl font-bold text-gray-800">{formData.judul}</h2>
        <p class="text-gray-600 mt-4 leading-relaxed">{formData.deskripsi}</p>
    </div>
    <div class="lg:w-2/3 w-full" data-aos="fade-left" data-aos-delay="100">
        <div class="bg-white p-8 rounded-lg shadow-2xl">
            <h3 class="text-2xl font-bold text-gray-800 mb-6 text-center">Formulir Aspirasi Warga</h3>
            <form id="aspirasi-form" action={formData.formActionUrl}>
                <div class="mb-4">
                    <label for="nama" class="block text-gray-700 text-sm font-bold mb-2">Nama Lengkap</label>
                    <input type="text" id="nama" name={formData.entry.nama} placeholder="Masukkan nama Anda" class="shadow appearance-none border border-gray-300 rounded w-full py-2 px-3 text-gray-700" required />
                </div>
                <div class="mb-4">
                    <label for="kontak" class="block text-gray-700 text-sm font-bold mb-2">No. Telepon / Email</label>
                    <input type="text" id="kontak" name={formData.entry.kontak} placeholder="Agar kami bisa menghubungi Anda kembali" class="shadow appearance-none border border-gray-300 rounded w-full py-2 px-3 text-gray-700" required />
                </div>
                <div class="mb-4">
                    <label for="subjek" class="block text-gray-700 text-sm font-bold mb-2">Subjek</label>
                    <input type="text" id="subjek" name={formData.entry.subjek} placeholder="Contoh: Usulan Perbaikan Jalan" class="shadow appearance-none border border-gray-300 rounded w-full py-2 px-3 text-gray-700" required />
                </div>
                <div class="mb-6">
                    <label for="pesan" class="block text-gray-700 text-sm font-bold mb-2">Pesan Aspirasi</label>
                    <textarea id="pesan" name={formData.entry.pesan} rows="5" placeholder="Tuliskan pesan, ide, atau masukan Anda di sini..." class="shadow appearance-none border border-gray-300 rounded w-full py-2 px-3 text-gray-700" required></textarea>
                </div>
                <div class="text-center">
                    <button type="submit" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-3 px-8 rounded-full focus:outline-none focus:shadow-outline transition duration-300">
                        Kirim Pesan
                    </button>
                </div>
            </form>
        </div>
    </div>
</div>

<div id="status-modal" class="hidden fixed inset-0 bg-opacity-50 items-center justify-center z-[1001] p-4">
    <div class="bg-white p-8 rounded-lg shadow-xl text-center max-w-sm w-full">
        <div id="modal-content"></div>
    </div>
</div>

<script>
    document.addEventListener('DOMContentLoaded', () => {
        // Cast the elements to their specific types to avoid TypeScript errors
        const form = document.getElementById('aspirasi-form') as HTMLFormElement | null;
        const statusModal = document.getElementById('status-modal') as HTMLElement | null;
        const modalContent = document.getElementById('modal-content') as HTMLElement | null;

        // Add a check to ensure all elements are found before proceeding
        if (!form || !statusModal || !modalContent) return;

        // The "hidden" class should be toggled to show/hide the modal.
        // The original code used a class that applied the same properties as "flex".
        // Let's use a class that actually hides the element to fix the "flex" warning.
        // We will remove the "flex" class when hiding the modal to ensure it's fully hidden.
        function hideModal() {
            statusModal.classList.add('hidden');
            statusModal.classList.remove('flex'); // Add this line to remove the "flex" class
        }

        form.addEventListener('submit', function(e) {
            e.preventDefault();

            // The 'form' variable is now guaranteed to be an HTMLFormElement inside this block,
            // so we can safely access its 'action' property.
            if (form.action.includes('YOUR_GOOGLE_FORM') || form.action === '') {
                alert("Form action URL has not been configured. Please update kontak.json.");
                return;
            }

            modalContent.innerHTML = `
                <div class="flex justify-center items-center mb-4">
                    <div class="w-12 h-12 border-4 border-blue-500 border-t-transparent rounded-full animate-spin"></div>
                </div>
                <p class="text-lg text-gray-700">Mengirim pesan...</p>`;
            
            // We now add 'flex' here to show the modal
            statusModal.classList.add('flex');
            statusModal.classList.remove('hidden');

            const formData = new FormData(form);

            fetch(form.action, {
                method: 'POST',
                body: formData,
                mode: 'no-cors'
            })
            .then(() => {
                modalContent.innerHTML = `
                    <div class="text-green-500 text-6xl mb-4"><i class="fas fa-check-circle"></i></div>
                    <h3 class="text-2xl font-bold text-gray-800 mb-2">Terima Kasih!</h3>
                    <p class="text-gray-600 mb-6">Aspirasi Anda telah berhasil terkirim.</p>
                    <button id="close-modal-btn" class="bg-blue-600 hover:bg-blue-700 text-white font-bold py-2 px-6 rounded-full">Tutup</button>`;
                document.getElementById('close-modal-btn')?.addEventListener('click', hideModal); // Use optional chaining for safety
                
                // The 'form' variable is now of type HTMLFormElement, so it has a 'reset' method
                form.reset();
            })
            .catch(error => {
                modalContent.innerHTML = `
                    <div class="text-red-500 text-6xl mb-4"><i class="fas fa-times-circle"></i></div>
                    <h3 class="text-2xl font-bold text-gray-800 mb-2">Gagal Mengirim</h3>
                    <p class="text-gray-600 mb-6">Maaf, terjadi kesalahan. Silakan coba lagi nanti.</p>
                    <button id="close-modal-btn" class="bg-gray-700 hover:bg-gray-800 text-white font-bold py-2 px-6 rounded-full">Tutup</button>`;
                document.getElementById('close-modal-btn')?.addEventListener('click', hideModal); // Use optional chaining for safety
                console.error('Error:', error);
            });
        });

        document.addEventListener('keydown', (e) => {
            if (e.key === 'Escape' && !statusModal.classList.contains('hidden')) {
                hideModal();
            }
        });

        statusModal.addEventListener('click', (e) => {
            if (e.target === statusModal) {
                hideModal();
            }
        });
    });
</script>