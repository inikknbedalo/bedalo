---
export interface Props {
  fotoItems: any[];
}
const { fotoItems } = Astro.props;
---

<div id="photo-gallery" class="grid grid-cols-2 md:grid-cols-3 lg:grid-cols-4 gap-4">
  {fotoItems.map((item, index) => (
    <div class="overflow-hidden rounded-lg shadow-md cursor-pointer" data-aos="zoom-in" data-aos-delay={(100 + (index % 4) * 100)}>
      <img src={item.url} alt={item.alt} class="gallery-img w-full h-full object-cover transform hover:scale-110 transition-transform duration-300" />
    </div>
  ))}
</div>

<div id="lightbox-modal" class="lightbox">
    <span class="close-lightbox">×</span>
    <div class="lightbox-container">
        <a class="prev">❮</a>
        <img class="lightbox-content" id="lightbox-image" alt="Enlarged gallery view"/>
        <a class="next">❯</a>
    </div>
    <div class="thumbnail-container" id="thumbnail-container"></div>
</div>


<style>
    .lightbox { display: none; position: fixed; z-index: 1000; left: 0; top: 0; width: 100%; height: 100%; overflow: hidden; background-color: rgba(0,0,0,0.9); flex-direction: column; justify-content: center; align-items: center; }
    .lightbox-container { position: relative; display: flex; justify-content: center; align-items: center; width: 100%; max-width: 1000px; margin: auto; }
    .lightbox-content { display: block; max-width: 90%; max-height: 70vh; object-fit: contain; }
    .close-lightbox { position: absolute; top: 25px; right: 50px; color: #f1f1f1; font-size: 40px; font-weight: bold; transition: 0.3s; }
    .close-lightbox:hover, .close-lightbox:focus { color: #bbb; text-decoration: none; cursor: pointer; }
    .prev, .next { cursor: pointer; position: absolute; top: 50%; width: auto; padding: 16px; margin-top: -50px; color: white; font-weight: bold; font-size: 20px; transition: 0.6s ease; border-radius: 0 3px 3px 0; user-select: none; -webkit-user-select: none; background-color: rgba(0,0,0,0.3); }
    .prev { left: 0; border-radius: 3px 0 0 3px; }
    .next { right: 0; border-radius: 0 3px 3px 0; }
    .prev:hover, .next:hover { background-color: rgba(0,0,0,0.8); }
    .thumbnail-container { padding: 10px 0; display: flex; justify-content: center; gap: 5px; overflow-x: auto; width: 100%; max-width: 80vw; }
    .thumbnail-img { opacity: 0.6; cursor: pointer; height: 80px; width: auto; transition: opacity 0.3s; }
    .thumbnail-img:hover, .thumbnail-img.active { opacity: 1; }
</style>


<script>
    function initializeLightbox() {
        const lightboxModal = document.getElementById('lightbox-modal');
        const lightboxImage = document.getElementById('lightbox-image');
        const thumbnailContainer = document.getElementById('thumbnail-container');
        const galleryImages = document.querySelectorAll('#photo-gallery .gallery-img');
        
        if (!lightboxModal || galleryImages.length === 0) return;

        let currentImageIndex;

        function openLightbox(index) {
            currentImageIndex = index;
            lightboxModal.style.display = 'flex';
            showImage(currentImageIndex);
        }

        function closeLightbox() {
            lightboxModal.style.display = 'none';
        }

        function showImage(index) {
            if (index < 0 || index >= galleryImages.length) return;
            lightboxImage.src = galleryImages[index].src;
            currentImageIndex = index;
            thumbnailContainer.innerHTML = '';
            galleryImages.forEach((img, i) => {
                const thumb = document.createElement('img');
                thumb.src = img.src;
                thumb.alt = img.alt;
                thumb.classList.add('thumbnail-img');
                if (i === currentImageIndex) {
                    thumb.classList.add('active');
                }
                thumb.addEventListener('click', () => showImage(i));
                thumbnailContainer.appendChild(thumb);
            });
            const activeThumb = thumbnailContainer.querySelector('.active');
            if (activeThumb) {
                activeThumb.scrollIntoView({ behavior: 'smooth', block: 'nearest', inline: 'center' });
            }
        }

        function navigateImage(direction) {
            let newIndex = currentImageIndex + direction;
            if (newIndex >= galleryImages.length) {
                newIndex = 0;
            } else if (newIndex < 0) {
                newIndex = galleryImages.length - 1;
            }
            showImage(newIndex);
        }

        galleryImages.forEach((img, index) => {
            img.addEventListener('click', () => openLightbox(index));
        });

        document.querySelector('.close-lightbox')?.addEventListener('click', closeLightbox);
        document.querySelector('.prev')?.addEventListener('click', () => navigateImage(-1));
        document.querySelector('.next')?.addEventListener('click', () => navigateImage(1));
        document.addEventListener('keydown', (e) => {
            if (lightboxModal.style.display === 'flex') {
                if (e.key === 'ArrowRight') navigateImage(1);
                else if (e.key === 'ArrowLeft') navigateImage(-1);
                else if (e.key === 'Escape') closeLightbox();
            }
        });
    }

    // Ensure the script runs after the page is fully loaded
    document.addEventListener('DOMContentLoaded', initializeLightbox);
</script>