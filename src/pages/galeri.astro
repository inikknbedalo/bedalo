---
import Layout from '../layouts/Layout.astro';
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import PageBanner from '../components/PageBanner.astro';
import SectionTitle from '../components/SectionTitle.astro';
import LiteYouTube from '../components/LiteYouTube.astro';
import PhotoGallery from '../components/PhotoGallery.astro';
import { getImage } from 'astro:assets';
import type { ImageMetadata } from 'astro';
import data from '../data/galeri.json';

const allImages = await import.meta.glob<{ default: ImageMetadata }>('/src/assets/images/**/*.{jpeg,jpg,png,gif,webp,svg}');

const processedPhotos = await Promise.all(
    data.foto.map(async (photo) => {
        const imagePath = Object.keys(allImages).find(path => path.endsWith(photo.url));
        if (!imagePath) return null;
        const originalImage = allImages[imagePath];
        const lightboxImage = await getImage({ src: originalImage(), width: 1200, format: 'webp' });
        return {
            alt: photo.alt,
            originalSrc: originalImage,
            lightboxSrc: lightboxImage.src,
        };
    })
).then(results => results.filter(item => item !== null));

// Pagination variables
const itemsPerPage = 12;
const totalPages = Math.ceil(processedPhotos.length / itemsPerPage);

// Get the current page from URL parameters, default to 1 if not specified
const currentPage = Astro.url.searchParams.get('page') ? parseInt(Astro.url.searchParams.get('page') as string) : 1;
// Ensure currentPage is within valid range
const validPage = Math.max(1, Math.min(currentPage, totalPages));
const startIndex = (validPage - 1) * itemsPerPage;
const endIndex = startIndex + itemsPerPage;
const photosToShow = processedPhotos.slice(startIndex, endIndex);

const getYouTubeId = (url: string) => {
    const regex = /(?:https?:\/\/)?(?:www\.)?(?:youtube\.com|youtu\.be)\/(?:watch\?v=)?(?:embed\/)?([\w-]{11})/;
    return url.match(regex)?.[1] || null;
};
---
<Layout 
    title="Galeri | Website Dusun Bedalo"
    description="Lihat momen dan kenangan dalam bingkai melalui galeri foto dan video."
>
    <Header currentPage="Galeri" />
    <main>
        <PageBanner 
            title="Galeri Dusun Bedalo"
            subtitle="Momen dan Kenangan dalam Bingkai"
            bgColor="bg-teal-600"
        />
        <section id="foto" class="py-20 overflow-hidden bg-white">
            <div class="container mx-auto px-6">
                <SectionTitle title="Galeri Foto" />
                
                <PhotoGallery fotoItems={photosToShow} itemsPerPage={itemsPerPage} />
                
                <!-- Pagination Controls -->
                {totalPages > 1 && (
                    <div class="flex justify-center mt-8">
                        <nav class="inline-flex rounded-md shadow">
                            {Array.from({ length: totalPages }, (_, i) => i + 1).map((page) => (
                                <a
                                    href={`?page=${page}`}
                                    class={`px-4 py-2 text-sm font-medium ${
                                        page === validPage
                                            ? 'bg-blue-600 text-white'
                                            : 'bg-white text-gray-700 hover:bg-gray-50'
                                    } border border-gray-300 first:rounded-l-md last:rounded-r-md`}
                                >
                                    {page}
                                </a>
                            ))}
                        </nav>
                    </div>
                )}
            </div>
        </section>
        
        <section id="video" class="py-20 overflow-hidden">
            <div class="container mx-auto px-6">
                <SectionTitle title="Galeri Video" />
                <div class="grid grid-cols-1 md:grid-cols-2 gap-8">
                    {data.video.map((item, index) => {
                        const videoId = getYouTubeId(item.url);
                        if (!videoId) return null;
                        return (
                            // --- MODIFICATION START ---
                            // 1. The <a> tag is now the entire card.
                            <a 
                                href={item.url}
                                class="glightbox group bg-white rounded-lg shadow-lg overflow-hidden flex flex-col transition-shadow hover:shadow-xl"
                                data-gallery="gallery-video"
                                data-aos="fade-up" 
                                data-aos-delay={100 + index * 100}
                            >
                                {/* 2. Added padding here for the "margin" around the video. */}
                                <div class="p-4">
                                    <div class="aspect-video w-full overflow-hidden rounded-lg">
                                        <LiteYouTube id={videoId} title={item.judul} />
                                    </div>
                                </div>
                                
                                {/* 3. The title is now inside the clickable area. */}
                                <div class="p-4 pt-0">
                                    <h3 class="font-bold text-gray-800 transition-colors group-hover:text-blue-600">{item.judul}</h3>
                                </div>
                            </a>
                            // --- MODIFICATION END ---
                        )
                    })}
                </div>
            </div>
        </section>
    </main>
    <Footer />
</Layout>

